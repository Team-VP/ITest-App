@model ITestApp.Web.Areas.Private.Models.TakeTestViewModels.IndexViewModel

@{
    ViewData["Title"] = "Model.Title";
    int questionCounter = 0;
    int answerCounter = 0;
}
<h2>@Model.TestName</h2>

<hr />
<div class="container">
    <div class="row">
        <div class="col-lg-7 col-md-7 col-sm-7">
            <h3>Category: <small>@Model.CategoryName</small></h3>
        </div>
        <div class="col-lg-5 col-md-5 col-sm-5">
            <div class="row h3 right">
                <div class="col-md-6 col-xs-3 text-right">Time:</div>
                <div class="col-md-6 col-xs-3" id="countdownExample">
                    <div class="values"></div>
                </div>
            </div>

        </div>
    </div>

</div>
<form asp-controller="TakeTest" asp-action="Index" method="post" id="test-form">

    <input asp-for="@Model.CategoryName" type="hidden" value="@Model.CategoryName">

    <input asp-for="@Model.TestName" type="hidden" value="@Model.TestName">

    <input asp-for="@Model.TestId" type="hidden" value="@Model.TestId">

    <input asp-for="@Model.Duration" type="hidden" value="@Model.Duration">

    <input asp-for="@Model.StartedOn" type="hidden" value="@Model.StartedOn">

    <input asp-for="@Model.UserId" type="hidden" value="@Model.UserId">

    <input asp-for="@Model.TimeLeft.TotalSeconds" type="hidden" value="@Model.TimeLeft.TotalSeconds" id="test-total-time-left">


    <div class="panel panel-default" id="questions">
        @foreach (var question in Model.Questions)
        {
            <!-- Default panel contents -->
            <input asp-for="@Model.Questions[questionCounter].Id" type="hidden" value="@question.Id">

            <div class="panel-heading"><h4><b>@(questionCounter + 1) . Question</b></h4></div>
            <div class="panel-body">

                <p>@Html.Raw(question.Content)</p>
                <div class="row-xs-8">
                    <div class="answers">
                        @foreach (var answer in question.Answers)
                        {
                            <div class="form-group has-feedback">
                                <div class="input-group answer-display-content">
                                    <span class="input-group-addon">
                                        <input asp-for="@Model.Questions[questionCounter].AndswerId" type="radio" value="@answer.Id" myatribute="@question.Id" />
                                    </span>
                                    <div class="form-control form-control-static answer-display-content">
                                        @Html.Raw(answer.Content)
                                    </div>
                                    <span class="glyphicon form-control-feedback "></span>
                                </div>
                            </div>
                            <span class="glyphicon form-control-feedback "></span>


                            answerCounter++;
                        }
                    </div>
                </div>
            </div>
            questionCounter++;
        }
    </div>
    <button id="submit-test-button" class="btn btn-primary btn-lg" disabled="disabled">Submit</button>
</form>
@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.0/jquery-confirm.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.0/jquery-confirm.min.css">
    <script src="https://cdn.jsdelivr.net/gh/jquery-form/form@4.2.2/dist/jquery.form.min.js" integrity="sha384-FzT3vTVGXqf7wRfy8k4BiyzvbNfeYjK+frTVqZeNDFl8woCbF0CYG6g2fMEFFo/i" crossorigin="anonymous"></script>
    <script src="~/js/easytimer.min.js"></script>
    <script src="~/js/take-test.js"></script>
}




