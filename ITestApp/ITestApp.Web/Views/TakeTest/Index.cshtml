@model ITestApp.Web.Models.TakeTestViewModels.IndexViewModel

@{
    ViewData["Title"] = "Model.Title";
    int questionCounter = 0;
    int answerCounter = 0;
}
<h2>@Model.TestName</h2>

<hr />
<div class="container">
    <div class="row">
        <div class="col-lg-7">
            <h3>Category: <small>@Model.CategoryName</small></h3>
        </div>
        <div class="col-lg-4 text-right">
            <h3>
                Time:
                <small>
                    <div id="countdownExample">
                        <div class="values"></div>
                    </div>
                </small>
            </h3>
        </div>
    </div>

</div>
<form asp-controller="TakeTest" asp-action="Index" method="post" id="test-form">

    <input asp-for="@Model.CategoryName" type="hidden" value="@Model.CategoryName">
    
    <input asp-for="@Model.TestName" type="hidden" value="@Model.TestName">
    
    <input asp-for="@Model.TestId" type="hidden" value="@Model.TestId">
    
    <input asp-for="@Model.Duration" type="hidden" value="@Model.Duration">
    
    <input asp-for="@Model.StartedOn" type="hidden" value="@Model.StartedOn">
    
    <input asp-for="@Model.UserId" type="hidden" value="@Model.UserId">
    

    <div class="panel panel-default" id="questions">
        @foreach (var question in Model.Questions)
    {
        <!-- Default panel contents -->
        <input asp-for="@Model.Questions[questionCounter].Id" type="hidden" value="@question.Id">
        
        <div class="panel-heading"><h4><b>@(questionCounter + 1) . Question</b></h4></div>
        <div class="panel-body">

            <p>@question.Content</p>
            <div class="row-xs-8">
                <div class="answers">
                    @foreach (var ans in question.Answers)
                {
                    <div class="form-group has-feedback">
                        <label class="input-group">
                            <span class="input-group-addon">
                                <input asp-for="@Model.Questions[questionCounter].AndswerId" type="radio" value="@ans.Id" />
                                
                            </span>
                            <div class="form-control form-control-static">
                                @ans.Content
                            </div>
                            <span class="glyphicon form-control-feedback "></span>
                        </label>
                    </div>
                answerCounter++;
            }
                </div>
            </div>
        </div>
    questionCounter++;
}
    </div>
    <button id="submit-test-button" class="btn btn-primary btn-lg">Submit</button>
</form>
@*TODO Refactor this mess*@
@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.0/jquery-confirm.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.0/jquery-confirm.min.css">
    <script src="https://cdn.jsdelivr.net/gh/jquery-form/form@4.2.2/dist/jquery.form.min.js" integrity="sha384-FzT3vTVGXqf7wRfy8k4BiyzvbNfeYjK+frTVqZeNDFl8woCbF0CYG6g2fMEFFo/i" crossorigin="anonymous"></script>
    <script src="~/js/easytimer.min.js"></script>
    <script>
        var timer = new Timer();
        console.log(@Model.TimeLeft.TotalSeconds);
        timer.start({ countdown: true, startValues: { seconds: @Model.TimeLeft.TotalSeconds} });
        $('#countdownExample .values').html(timer.getTimeValues().toString());
        timer.addEventListener('secondsUpdated', function (e) {
            $('#countdownExample .values').html(timer.getTimeValues().toString());
        });
        timer.addEventListener('targetAchieved', function (e) {
            $('#countdownExample .values').html('Time Expired');
            e.preventDefault();
            $('#test-form')
                .ajaxSubmit({
                    url: '/TakeTest/Index/',
                    type: 'POST',
                    success: function (response) {
                        $.confirm({
                            title: 'Time is over. :-(',
                            content: 'Your test submitted!',
                            buttons: {
                                Ok: function () {
                                    window.location.href = response;
                                },
                            }
                        });
                    }
                });
        });
    </script>
    <script>
        $('#test-form').on('submit', function (e) {
            e.preventDefault();
            var url = this.action;
            var data = $(this).serialize();
            $.confirm({
                title: 'Confirm!',
                content: 'Your test is about to be submitted!',
                buttons: {
                    confirm: function () {
                        $.post(url, data, function (r) {
                            console.log(r);
                            window.location.href = r;
                        });
                    },
                    cancel: function () {
                    },
                }
            });
        });
    </script>
}




